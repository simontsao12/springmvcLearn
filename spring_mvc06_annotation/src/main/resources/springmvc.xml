<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 掃描控制層組件 -->
    <context:component-scan base-package="com.atsimoncc"></context:component-scan>

    <!-- 配置 Thymleaf 視圖解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/> <!-- order 表示優先級 -->
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 假設往 /WEB-INF/templates/index.html 那麼只需要邏輯視圖 index 加上前後綴即可獲得物理視圖 /WEB-INF/templates/index.html -->
                        <!-- 視圖前綴 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 視圖後綴 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>

            </bean>
        </property>
    </bean>

    <!-- 設定預設的 servlet 處理靜態資源，注意要搭配 annotation-driven，否則會全部都變成由預設的 servlet 處理 -->
    <mvc:default-servlet-handler/>
    <!-- 開啟 mvc 的註解驅動，避免因為 view-controller 而只有一個請求會被處理 -->
    <mvc:annotation-driven/>
    <!-- 視圖控制器: 為當前(且若只有此標籤DispatcherServlet只會為此請求處理)的請求直接設定視圖名稱實現頁面跳轉，view-name 是邏輯視圖 -->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <!-- 檔案上傳解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    </bean>
    <mvc:interceptors>
        <ref bean="firstInterceptor" />
        <ref bean="secondInterceptor" />
        <!-- bean和ref標籤所配置的攔截器預設對DispatcherServlet處理的所有的請求進行攔截 -->
        <!-- <bean class="com.atsimoncc.interceptor.FirstInterceptor"/> -->
        <!-- <ref bean="firstInterceptor" /> -->
        <!-- <mvc:interceptor>
        &lt;!&ndash;設定需要攔截的請求的請求路徑，/**表示所有請求&ndash;&gt;
        <mvc:mapping path="/**"/>
        &lt;!&ndash;設定需要排除攔截的請求的請求路徑&ndash;&gt;
        <mvc:exclude-mapping path="/abc"/>
        &lt;!&ndash;設定攔截器&ndash;&gt;
        <ref bean="firstInterceptor" />
        </mvc:interceptor> -->
    </mvc:interceptors>

<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> -->
<!--        <property name="exceptionMappings"> -->
<!--            <props> -->
<!--                &lt;!&ndash; key 設定要處理的異常， value 設定出現該異常時要跳轉的頁面所對應的邏輯視圖 &ndash;&gt; -->
<!--                <prop key="java.lang.ArithmeticException">error</prop> -->
<!--            </props> -->
<!--        </property> -->
<!--        &lt;!&ndash; 設定共享在請求域中的異常訊息的屬性名稱 &ndash;&gt; -->
<!--        <property name="exceptionAttribute" value="ex"></property> -->
<!--    </bean> -->
</beans>